CREATE TABLE department(
    departmentID int AUTO_INCREMENT,
    departmentName varchar(20),
    Primary Key(departmentID)
);

CREATE TABLE student (
    studentID int AUTO_INCREMENT,
    name varchar(50),
    email varchar(50),
    departmentID int,
    Primary Key(studentID),
    Foreign Key(departmentID) references department(departmentID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE faculty(
    facultyID int AUTO_INCREMENT,
    facultyName varchar(50),
    departmentID int,
    facultyInitials varchar(3) not null,
    approved boolean,
    teaching double not null default '0.00',
    grading double not null default '0.00',
    friendliness double not null default '0.00',
    voteCount int not null default '0',
    Primary Key(facultyID),
    Foreign Key(departmentID) references department(departmentID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE facultyverify (
    facultyID int AUTO_INCREMENT,
    facultyName varchar(50),
    departmentID int,
    upVoteSum int not null default '0',
    downVoteSum int not null default '0',
    facultyInitials varchar(3) not null,
    Primary Key(facultyID),
    Foreign Key(departmentID) references department(departmentID) ON DELETE CASCADE ON UPDATE CASCADE,
    index facultyverify(facultyInitials, departmentID, upVoteSum)
);

CREATE TABLE course (
    courseID int AUTO_INCREMENT,
    courseTitle varchar(50),
    departmentID int,
    courseCode varchar(7) not null,
    approved boolean,
    Primary Key(courseID),
    Foreign Key(departmentID) references department(departmentID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE courseverify (
    courseID int AUTO_INCREMENT,
    courseTitle varchar(50),
    departmentID int,
    upVoteSum int not null default '0',
    downVoteSum int not null default '0',
    courseCode varchar(6) not null,
    Primary Key(courseID),
    Foreign Key(departmentID) references department(departmentID) ON DELETE CASCADE ON UPDATE CASCADE,
    index courseverify(courseCode, departmentID, upVoteSum)
);

CREATE TABLE vote (
    studentID int,
    facultyID int,
    upVote int,
    downVote int,
    Primary Key(studentID, facultyID),
    Foreign Key(studentID) references student(studentID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(facultyID) references facultyverify(facultyID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE coursevote (
    studentID int,
    courseID int,
    upVote int,
    downVote int,
    Primary Key(studentID, courseID),
    Foreign Key(studentID) references student(studentID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(courseID) references courseverify(courseID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE rating (
    studentID int,
    facultyID int,
    courseID int,
    teaching double  not null default '0.00',
    grading double not null default '0.00',
    friendliness double not null default '0.00',
    Primary Key(facultyID,studentID,courseID),
    Foreign Key(studentID) references student(studentID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(facultyID) references faculty(facultyID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(courseID) references course(courseID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE comment (
    commentID int AUTO_INCREMENT,
    studentID int,
    facultyID int,
    courseID int,
    commentText varchar(500),
    upVoteSum int not null default '0',
    downVoteSum int not null default '0',
    Primary Key(commentID),
    Foreign Key(studentID) references student(studentID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(facultyID) references faculty(facultyID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(courseID) references course(courseID) ON DELETE CASCADE ON UPDATE CASCADE,
    unique index comment(facultyID, courseID, studentID),
    index indexComment(facultyID)
);
CREATE TABLE commentvote(
    studentID int,
    commentID int,
    upVote int,
    downVote int,
    Primary Key(studentID, commentID),
    Foreign Key (commentID) references comment(commentID) ON DELETE CASCADE ON UPDATE CASCADE
);