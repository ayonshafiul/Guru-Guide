CREATE TABLE department(
    departmentID int AUTO_INCREMENT,
    departmentName varchar(20),
    Primary Key(departmentID)
);

CREATE TABLE student (
    studentID int AUTO_INCREMENT,
    name varchar(50),
    email varchar(50),
    password varchar(255),
    departmentID int,
    Primary Key(studentID),
    Foreign Key(departmentID) references department(departmentID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE faculty(
    facultyID int AUTO_INCREMENT,
    facultyName varchar(50),
    departmentID int,
    facultyInitials varchar(5),
    approved boolean,
    upVoteSum int not null default '0',
    downVoteSum int not null default '0',
    teaching double not null default '0.00',
    grading double not null default '0.00',
    humanity double not null default '0.00',
    average double not null default '0.00',
    Primary Key(facultyID),
    Foreign Key(departmentID) references department(departmentID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE vote (
    studentID int,
    facultyID int,
    upVote int,
    downVote int,
    Primary Key(studentID, facultyID),
    Foreign Key(studentID) references student(studentID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(facultyID) references faculty(facultyID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE rating (
    studentID int,
    facultyID int,
    teaching double  not null default '0.00',
    grading double not null default '0.00',
    humanity double not null default '0.00',
    Primary Key(facultyID,studentID),
    Foreign Key(studentID) references student(studentID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(facultyID) references faculty(facultyID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE comment (
    commentID int AUTO_INCREMENT,
    studentID int,
    facultyID int,
    comment varchar(500),
    upVoteSum int not null default '0',
    downVoteSum int not null default '0',
    Primary Key(commentID),
    Foreign Key(studentID) references student(studentID) ON DELETE CASCADE ON UPDATE CASCADE,
    Foreign Key(facultyID) references faculty(facultyID) ON DELETE CASCADE ON UPDATE CASCADE

);
CREATE TABLE commentRating(
    studentID int,
    commentID int,
    upVote int,
    downVote int,
    Primary Key(studentID, commentID),
    Foreign Key (commentID) references comment(commentID) ON DELETE CASCADE ON UPDATE CASCADE
);






